package com.sinius15.launchpad;

public class LaunchpadResources {
	
	public static final int[][] LETTER_CAPITAL_A = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, 15, 15, 15, 15, 15, 15 }, { -1, -1, 15, -1, -1, 15, -1, -1, -1 },
			{ -1, -1, 15, -1, -1, 15, -1, -1, -1 }, { -1, -1, 15, -1, -1, 15, -1, -1, -1 },
			{ -1, -1, 15, -1, -1, 15, -1, -1, -1 }, { -1, -1, -1, 15, 15, 15, 15, 15, 15 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_B = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, 15, 15, 15, 15, 15, 15, 15, 15 }, { -1, 15, -1, -1, 15, -1, -1, -1, 15 },
			{ -1, 15, -1, -1, 15, -1, -1, -1, 15 }, { -1, 15, -1, -1, 15, -1, -1, -1, 15 },
			{ -1, 15, -1, -1, 15, -1, -1, -1, 15 }, { -1, -1, 15, 15, 15, 15, 15, 15, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_C = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, 15, 15, 15, 15, 15, 15, -1 }, { -1, 15, -1, -1, -1, -1, -1, -1, 15 },
			{ -1, 15, -1, -1, -1, -1, -1, -1, 15 }, { -1, 15, -1, -1, -1, -1, -1, -1, 15 },
			{ -1, 15, -1, -1, -1, -1, -1, -1, 15 }, { -1, 15, -1, -1, -1, -1, -1, -1, 15 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_D = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, 15, 15, 15, 15, 15, 15, 15, 15 }, { -1, 15, -1, -1, -1, -1, -1, -1, 15 },
			{ -1, 15, -1, -1, -1, -1, -1, -1, 15 }, { -1, 15, -1, -1, -1, -1, -1, -1, 15 },
			{ -1, 15, -1, -1, -1, -1, -1, -1, 15 }, { -1, -1, 15, 15, 15, 15, 15, 15, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_E = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, 15, 15, 15, 15, 15, 15, 15, 15 }, { -1, 15, -1, -1, 15, -1, -1, -1, 15 },
			{ -1, 15, -1, -1, 15, -1, -1, -1, 15 }, { -1, 15, -1, -1, 15, -1, -1, -1, 15 },
			{ -1, 15, -1, -1, 15, -1, -1, -1, 15 }, { -1, 15, -1, -1, 15, -1, -1, -1, 15 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_F = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, 15, 15, 15, 15, 15, 15, 15, 15 }, { -1, 15, -1, -1, 15, -1, -1, -1, -1 },
			{ -1, 15, -1, -1, 15, -1, -1, -1, -1 }, { -1, 15, -1, -1, 15, -1, -1, -1, -1 },
			{ -1, 15, -1, -1, 15, -1, -1, -1, -1 }, { -1, 15, -1, -1, 15, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_G = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, 15, 15, 15, 15, 15, 15, 15, 15 }, { -1, 15, -1, -1, -1, -1, -1, -1, 15 },
			{ 1, 15, -1, -1, -1, -1, -1, -1, 15 }, { -1, 15, -1, -1, -1, 15, -1, -1, 15 },
			{ -1, 15, -1, -1, -1, 15, -1, -1, 15 }, { -1, 15, -1, -1, -1, 15, 15, 15, 15 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_H = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, 15, 15, 15, 15, 15, 15, 15, 15 }, { -1, -1, -1, -1, 15, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, 15, -1, -1, -1, -1 }, { -1, -1, -1, -1, 15, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, 15, -1, -1, -1, -1 }, { -1, 15, 15, 15, 15, 15, 15, 15, 15 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_I = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, 15, -1, -1, -1, -1, -1, -1, 15 },
			{ -1, 15, 15, 15, 15, 15, 15, 15, 15 }, { -1, 15, 15, 15, 15, 15, 15, 15, 15 },
			{ -1, 15, -1, -1, -1, -1, -1, -1, 15 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_J = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, 15, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, 15 }, { -1, 15, -1, -1, -1, -1, -1, -1, 15 },
			{ -1, 15, 15, 15, 15, 15, 15, 15, -1 }, { -1, 15, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_K = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, 15, 15, 15, 15, 15, 15, 15, 15 },
			{ -1, -1, -1, -1, 15, 15, -1, -1, -1 }, { -1, -1, -1, 15, -1, -1, 15, -1, -1 },
			{ -1, -1, 15, -1, -1, -1, -1, 15, -1 }, { -1, 15, -1, -1, -1, -1, -1, -1, 15 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_L = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, 15, 15, 15, 15, 15, 15, 15, 15 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, 15 }, { -1, -1, -1, -1, -1, -1, -1, -1, 15 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, 15 }, { -1, -1, -1, -1, -1, -1, -1, -1, 15 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_M = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, 15, 15, 15, 15, 15, 15, 15, 15 }, { -1, -1, 15, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, 15, -1, -1, -1, -1, -1 }, { -1, -1, -1, 15, -1, -1, -1, -1, -1 },
			{ -1, -1, 15, -1, -1, -1, -1, -1, -1 }, { -1, 15, 15, 15, 15, 15, 15, 15, 15 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_N = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, 15, 15, 15, 15, 15, 15, 15, 15 }, { -1, -1, 15, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, 15, 15, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, 15, 15, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, 15, -1 }, { -1, 15, 15, 15, 15, 15, 15, 15, 15 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_O = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, 15, 15, 15, 15, -1, -1 }, { -1, -1, 15, -1, -1, -1, -1, 15, -1 },
			{ -1, -1, 15, -1, -1, -1, -1, 15, -1 }, { -1, -1, 15, -1, -1, -1, -1, 15, -1 },
			{ -1, -1, 15, -1, -1, -1, -1, 15, -1 }, { -1, -1, -1, 15, 15, 15, 15, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_P = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, 15, 15, 15, 15, 15, 15, 15, 15 }, { -1, 15, -1, -1, -1, 15, -1, -1, -1 },
			{ -1, 15, -1, -1, -1, 15, -1, -1, -1 }, { -1, 15, -1, -1, -1, 15, -1, -1, -1 },
			{ -1, 15, -1, -1, -1, 15, -1, -1, -1 }, { -1, -1, 15, 15, 15, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_Q = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, 15, 15, 15, -1, -1, -1, -1 }, { -1, 15, -1, -1, -1, 15, -1, -1, -1 },
			{ -1, 15, -1, -1, -1, 15, -1, -1, -1 }, { -1, 15, -1, -1, -1, 15, -1, -1, -1 },
			{ -1, 15, -1, -1, -1, 15, -1, -1, -1 }, { -1, 15, 15, 15, 15, 15, 15, 15, 15 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_R = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, 15, 15, 15, 15, 15, 15, 15, 15 }, { -1, 15, -1, -1, 15, 15, -1, -1, -1 },
			{ -1, 15, -1, -1, 15, -1, 15, -1, -1 }, { -1, 15, -1, -1, 15, -1, -1, 15, -1 },
			{ -1, 15, -1, -1, 15, -1, -1, -1, 15 }, { -1, -1, 15, 15, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_S = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, 15, 15, 15, -1, -1, -1, 15 }, { -1, 15, -1, -1, 15, -1, -1, -1, 15 },
			{ -1, 15, -1, -1, 15, -1, -1, -1, 15 }, { -1, 15, -1, -1, 15, -1, -1, -1, 15 },
			{ -1, 15, -1, -1, 15, -1, -1, -1, 15 }, { -1, 15, -1, -1, -1, 15, 15, 15, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_T = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, 15, 15, -1, -1, -1, -1, -1, -1 }, { -1, 15, 15, -1, -1, -1, -1, -1, -1 },
			{ -1, 15, 15, 15, 15, 15, 15, 15, 15 }, { -1, 15, 15, 15, 15, 15, 15, 15, 15 },
			{ -1, 15, 15, -1, -1, -1, -1, -1, -1 }, { -1, 15, 15, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_U = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, 15, 15, 15, 15, 15, 15, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, 15 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, 15 }, { -1, -1, -1, -1, -1, -1, -1, -1, 15 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, 15 }, { -1, -1, 15, 15, 15, 15, 15, 15, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_V = { { -1, 15, 15, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, 15, 15, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, 15, 15, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, 15, 15 }, { -1, -1, -1, -1, -1, -1, -1, 15, 15 },
			{ -1, -1, -1, -1, -1, 15, 15, -1, -1 }, { -1, -1, -1, 15, 15, -1, -1, -1, -1 },
			{ -1, 15, 15, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_W = { { -1, -1, 15, 15, 15, -1, -1, -1, -1 },
			{ 15, -1, -1, -1, -1, 15, 15, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, 15, -1 },
			{ -1, -1, -1, -1, 15, 15, 15, -1, -1 }, { -1, -1, -1, -1, 15, 15, 15, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, 15, -1 }, { -1, -1, -1, -1, -1, 15, 15, -1, -1 },
			{ -1, -1, 15, 15, 15, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_X = { { -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, 15, 15, -1, -1, -1, -1, 15, 15 }, { -1, -1, -1, 15, -1, -1, 15, -1, -1 },
			{ -1, -1, -1, -1, 15, 15, -1, -1, -1 }, { -1, -1, -1, -1, 15, 15, -1, -1, -1 },
			{ -1, -1, -1, 15, -1, -1, 15, -1, -1 }, { -1, 15, 15, -1, -1, -1, -1, 15, 15 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_Y = { { -1, 15, 15, -1, -1, -1, -1, -1, -1 },
			{ -1, 15, 15, 15, -1, -1, -1, -1, -1 }, { -1, -1, 15, 15, 15, -1, -1, -1, -1 },
			{ -1, -1, -1, 15, 15, 15, 15, 15, 15 }, { -1, -1, -1, 15, 15, 15, 15, 15, 15 },
			{ -1, -1, 15, 15, 15, -1, -1, -1, -1 }, { -1, 15, 15, 15, -1, -1, -1, -1, -1 },
			{ -1, 15, 15, -1, -1, -1, -1, -1, -1 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_CAPITAL_Z = { { -1, 15, 15, -1, -1, -1, 15, 15, 15 },
			{ -1, 15, 15, -1, -1, 15, 15, 15, 15 }, { -1, 15, 15, -1, -1, 15, 15, 15, 15 },
			{ -1, 15, 15, -1, 15, 15, -1, 15, 15 }, { -1, 15, 15, -1, 15, 15, -1, 15, 15 },
			{ -1, 15, 15, 15, 15, 15, -1, 15, 15 }, { -1, 15, 15, 15, 15, -1, -1, 15, 15 },
			{ -1, 15, 15, 15, -1, -1, -1, 15, 15 }, { -1, -1, -1, -1, -1, -1, -1, -1, -1 } };
	public static final int[][] LETTER_SPACE = { { -1, -1, -1, -1, -1, -1, -1, 15, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, 15, -1 }, { -1, -1, -1, -1, -1, -1, -1, 15, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, 15, -1 }, { -1, -1, -1, -1, -1, -1, -1, 15, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, 15, -1 }, { -1, -1, -1, -1, -1, -1, -1, 15, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, 15, -1 }, { -1, -1, -1, -1, -1, -1, -1, 15, -1 } };
	
	/**
	 * Finds a default LaunchpadPattern with the letter.
	 * 
	 * @param letter
	 *            the letter you want to receive the LaunchpadPattern from
	 * @return The launchpadPattern requested. If not found null.
	 */
	public static LaunchpadPattern getLetterPattern(char letter) {
		switch (letter) {
			case 'A':
				return new LaunchpadPattern(LETTER_CAPITAL_A);
			case 'B':
				return new LaunchpadPattern(LETTER_CAPITAL_B);
			case 'C':
				return new LaunchpadPattern(LETTER_CAPITAL_C);
			case 'D':
				return new LaunchpadPattern(LETTER_CAPITAL_D);
			case 'E':
				return new LaunchpadPattern(LETTER_CAPITAL_E);
			case 'F':
				return new LaunchpadPattern(LETTER_CAPITAL_F);
			case 'G':
				return new LaunchpadPattern(LETTER_CAPITAL_G);
			case 'H':
				return new LaunchpadPattern(LETTER_CAPITAL_H);
			case 'I':
				return new LaunchpadPattern(LETTER_CAPITAL_I);
			case 'J':
				return new LaunchpadPattern(LETTER_CAPITAL_J);
			case 'K':
				return new LaunchpadPattern(LETTER_CAPITAL_K);
			case 'L':
				return new LaunchpadPattern(LETTER_CAPITAL_L);
			case 'M':
				return new LaunchpadPattern(LETTER_CAPITAL_M);
			case 'N':
				return new LaunchpadPattern(LETTER_CAPITAL_N);
			case 'O':
				return new LaunchpadPattern(LETTER_CAPITAL_O);
			case 'P':
				return new LaunchpadPattern(LETTER_CAPITAL_P);
			case 'Q':
				return new LaunchpadPattern(LETTER_CAPITAL_Q);
			case 'R':
				return new LaunchpadPattern(LETTER_CAPITAL_R);
			case 'S':
				return new LaunchpadPattern(LETTER_CAPITAL_S);
			case 'T':
				return new LaunchpadPattern(LETTER_CAPITAL_T);
			case 'U':
				return new LaunchpadPattern(LETTER_CAPITAL_U);
			case 'V':
				return new LaunchpadPattern(LETTER_CAPITAL_V);
			case 'W':
				return new LaunchpadPattern(LETTER_CAPITAL_W);
			case 'X':
				return new LaunchpadPattern(LETTER_CAPITAL_X);
			case 'Y':
				return new LaunchpadPattern(LETTER_CAPITAL_Y);
			case 'Z':
				return new LaunchpadPattern(LETTER_CAPITAL_Z);
			case ' ':
				return new LaunchpadPattern(LETTER_SPACE);
			default:
				return null;
		}
	}
}
